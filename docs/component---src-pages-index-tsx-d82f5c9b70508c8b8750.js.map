{"version":3,"file":"component---src-pages-index-tsx-d82f5c9b70508c8b8750.js","mappings":"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","sources":["webpack://little_survey/./src/components/basics/INPUTS/Checkbox/Checkbox.module.css","webpack://little_survey/./src/components/basics/INPUTS/Checkbox/Checkbox.tsx","webpack://little_survey/./src/components/basics/INPUTS/CheckboxGroup/CheckboxGroup.tsx","webpack://little_survey/./src/components/basics/INPUTS/CheckboxGroup/CheckboxGroup.module.css","webpack://little_survey/./src/components/blocks/FieldError/FieldError.tsx","webpack://little_survey/./src/components/blocks/FieldError/FieldError.module.css","webpack://little_survey/./src/components/basics/INPUTS/Radio/Radio.tsx","webpack://little_survey/./src/components/basics/Spacing/Spacing.module.css","webpack://little_survey/./src/components/basics/Spacing/Spacing.tsx","webpack://little_survey/./src/components/sections/proj/landingForm.tsx","webpack://little_survey/./src/components/sections/proj/landingForm.module.css","webpack://little_survey/./src/pages/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var container = \"Checkbox-module--container--CC6U2\";\nexport var checkmark = \"Checkbox-module--checkmark--W5hkK\";\nexport var label = \"Checkbox-module--label--oJ7Th\";\nexport var unavailable = \"Checkbox-module--unavailable--s-F15\";","import React, { FunctionComponent } from 'react'\nimport * as checkboxStyles from './Checkbox.module.css'\nimport getClassNames from '../../../../utils/get-class-names'\n\nexport type CheckboxProps = React.ComponentProps<'input'> &\n  Readonly<{\n    /** id used for id of input - custom styling */\n    id?: string | undefined\n    /** tell the checkbox what it's status is, controlled by consumer and triggered via onChange */\n    isChecked: boolean\n    /** Called when toggled */\n    onChange(): void\n    /** value you wish the checkbox to have */\n    value: string\n    /** text for showing next to checkbox */\n    text: string\n    /** toggle to make unavailable */\n    available?: boolean\n  }>\n\nconst Checkbox: FunctionComponent<CheckboxProps> = ({\n  isChecked,\n  id,\n  available = true,\n  onChange,\n  value,\n  text,\n  ...rest\n}) => {\n  const textClassName = getClassNames({\n    defaultClasses: [`${checkboxStyles.label}`],\n\n    conditionalClasses: { [`${checkboxStyles.unavailable}`]: !available },\n  })\n  const checkboxClassName = getClassNames({\n    defaultClasses: [`${checkboxStyles.checkmark}`],\n    conditionalClasses: { [`${checkboxStyles.unavailable}`]: !available },\n  })\n\n  return (\n    <label className={checkboxStyles.container}>\n      <input\n        disabled={!available}\n        checked={isChecked}\n        id={id}\n        onChange={onChange}\n        type='checkbox'\n        value={value}\n        {...rest}\n      />\n      <span className={checkboxClassName} />\n      <span className={textClassName}>{text}</span>\n    </label>\n  )\n}\n\nexport default Checkbox\n","import React from 'react'\n\nimport getClassNames from '../../../../utils/get-class-names'\nimport Text from '../../../basics/Text/Text'\nimport * as checkboxGroupStyles from './CheckboxGroup.module.css'\n\ntype CheckboxGroupProps = Readonly<{\n  /** label must be provided for accessibility */\n  groupLabel: string\n  /** label is visually hidden by default */\n  showLabel?: boolean\n  /** children always of type ReactNode */\n  children: React.ReactNode\n}>\n\nconst CheckboxGroup: React.FC<CheckboxGroupProps> = ({\n  groupLabel,\n  showLabel = false,\n  children,\n}) => {\n  const groupLabelClassName = getClassNames({\n    conditionalClasses: {\n      ['visually-hidden']: !showLabel,\n    },\n  })\n\n  return (\n    <fieldset className={checkboxGroupStyles.container}>\n      <legend className={groupLabelClassName}>\n        <Text>{groupLabel}</Text>\n      </legend>\n      {children}\n    </fieldset>\n  )\n}\n\nexport default CheckboxGroup\n","// extracted by mini-css-extract-plugin\nexport var container = \"CheckboxGroup-module--container--BsK1s\";","import React from 'react'\nimport Text from '../../basics/Text/Text'\n\nimport * as fieldErrorStyles from './FieldError.module.css'\n\ntype FieldErrorPros = {\n  children: React.ReactElement\n  /** The message that should be displayed */\n  errorMessage: string\n  /** Flag to pass in error state */\n  showError: boolean\n  /** id must be provided, should be passing to the input child on the aria-describedby prop  */\n  id: string\n}\n\nconst FieldError: React.FC<FieldErrorPros> = ({ children, errorMessage, showError, id }) => {\n  if (!showError) return children\n\n  return (\n    <div className={fieldErrorStyles.root}>\n      <span className={fieldErrorStyles.childrenWrapper}>{children}</span>\n      <Text id={id} weight='Bold' className={fieldErrorStyles.errorMessage}>\n        {errorMessage}\n      </Text>\n    </div>\n  )\n}\n\nexport default FieldError\n","// extracted by mini-css-extract-plugin\nexport var root = \"FieldError-module--root--2Fz46\";\nexport var childrenWrapper = \"FieldError-module--children-wrapper--l7eD5\";\nexport var errorMessage = \"FieldError-module--error-message--BliHT\";","import React, { FunctionComponent } from 'react'\nimport Text from '../../Text/Text'\n\nexport type RadioProps = React.ComponentProps<'input'> &\n  Readonly<{\n    /** id used for id of input - custom styling */\n    id?: string | undefined\n    /** tell the radio what it's status is, controlled by consumer and triggered via onChange */\n    isChecked: boolean\n    /** Called when toggled */\n    onChange(event: any): void\n    /** value you wish the radio to pass the onChange */\n    value: string\n    /** text for showing next to radio */\n    label: string\n  }>\n\nconst Radio: FunctionComponent<RadioProps> = ({\n  isChecked,\n  id,\n  onChange,\n  value,\n  label,\n  ...rest\n}) => {\n  return (\n    <label>\n      <input checked={isChecked} id={id} onChange={onChange} type='radio' value={value} {...rest} />\n      <Text>{label}</Text>\n    </label>\n  )\n}\n\nexport default Radio\n","// extracted by mini-css-extract-plugin\nexport var spacing = \"Spacing-module--spacing--omXOY\";\nexport var spacingSingle = \"Spacing-module--spacing-single--D6GUP\";\nexport var spacingDouble = \"Spacing-module--spacing-double--wVw1k\";","import React from 'react'\nimport * as spacingStyles from './Spacing.module.css'\nimport getClassNames from '../../../utils/get-class-names'\n\ntype SpacingProps = {\n  /** level of spacing to apply */\n  size?: 'Single' | 'Double'\n  /** children always of type ReactNode */\n  children?: React.ReactNode\n}\n\n/** Spacing: Returns a sizeable 'spacing' element that creates empty space on a page using a div */\nconst Spacing: React.FC<SpacingProps> = ({ size = 'Single', children }: SpacingProps) => {\n  const classNames = getClassNames({\n    defaultClasses: [spacingStyles[`spacing${size}`], spacingStyles['spacing']],\n  })\n  return <div className={classNames}>{children}</div>\n}\n\nexport default Spacing\n","import React, { FormEvent, useEffect, useState } from 'react'\nimport { navigate } from 'gatsby'\n\nimport Button from '../../basics/Button/Button'\nimport Checkbox from '../../basics/INPUTS/Checkbox/Checkbox'\nimport CheckboxGroup from '../../basics/INPUTS/CheckboxGroup/CheckboxGroup'\nimport FieldError from '../../blocks/FieldError/FieldError'\nimport Heading from '../../basics/Heading/Heading'\nimport Radio from '../../basics/INPUTS/Radio/Radio'\nimport Spacing from '../../basics/Spacing/Spacing'\nimport * as landingFormStyles from './landingForm.module.css'\n\ntype FormData = {\n  age: string | number | undefined\n  group: string\n  name: string\n  pictureSequence: string\n  characterChoiceLast: boolean\n  gender: 'M' | 'F'\n  quizBeforeSmileyFaces: boolean\n}\n\ntype FormValidatingFields = {\n  age: string | number | undefined\n  group: string\n  name: string\n  pictureSequence: string\n}\n\nconst LandingForm: React.FC = () => {\n  const [nameError, setNameError] = useState(false)\n  const [groupError, setGroupError] = useState(false)\n  const [ageError, setAgeError] = useState(false)\n  const [pictureSequenceError, setPictureSequenceError] = useState(false)\n  const [gender, setGender] = useState<'M' | 'F'>('F')\n  const [age, setAge] = useState<string | number | undefined>()\n  const [name, setName] = useState('')\n  const [group, setGroup] = useState('')\n  const [pictureSequence, setPictureSequence] = useState('')\n  const [characterChoiceLast, setCharacterChoiceLast] = useState(false)\n  const [quizBeforeSmileyFaces, setQuizBeforeSmileyFaces] = useState(true)\n\n  useEffect(() => {\n    const detailsFormString = window.sessionStorage.getItem('detailsForm')\n    const detailsForm = detailsFormString ? JSON.parse(detailsFormString) : null\n    if (detailsForm?.group) {\n      setGroup(detailsForm.group)\n      window.sessionStorage.clear()\n    }\n  }, [])\n\n  const validateAge = (age: string | number | undefined): boolean => {\n    if (Number(age) >= 10 && Number(age) <= 240) {\n      setAgeError(false)\n      return true\n    } else {\n      setAgeError(true)\n      return false\n    }\n  }\n  const validateName = (name: string): boolean => {\n    if (name.length > 0) {\n      setNameError(false)\n      return true\n    } else {\n      setNameError(true)\n      return false\n    }\n  }\n  const validateGroup = (group: string): boolean => {\n    if (group.length > 0) {\n      setGroupError(false)\n      return true\n    } else {\n      setGroupError(true)\n      return false\n    }\n  }\n  const validatePictureSequence = (pictureSequence: string): boolean => {\n    const validSequenceValue = ['1', '2', '3', '4']\n    if (validSequenceValue.includes(pictureSequence)) {\n      setPictureSequenceError(false)\n      return true\n    } else {\n      setPictureSequenceError(true)\n      return false\n    }\n  }\n  const validateForm = ({ age, group, name, pictureSequence }: FormValidatingFields): boolean => {\n    const groupValid = validateGroup(group)\n    const nameValid = validateName(name)\n    const ageValid = validateAge(age)\n    const pictureValue = validatePictureSequence(pictureSequence)\n    return ageValid && nameValid && groupValid && pictureValue\n  }\n\n  const handleFormSubmit = async (event: FormEvent): Promise<void> => {\n    event.preventDefault()\n    const formData: FormData = {\n      age: age,\n      group: group,\n      name: name,\n      pictureSequence: pictureSequence,\n      characterChoiceLast: characterChoiceLast,\n      gender: gender,\n      quizBeforeSmileyFaces: quizBeforeSmileyFaces,\n    }\n\n    const formIsValid = validateForm({ age, group, name, pictureSequence })\n    if (formIsValid) {\n      window.sessionStorage.setItem('detailsForm', JSON.stringify(formData))\n      if (!characterChoiceLast) {\n        await navigate(`/character`)\n      } else {\n        if (quizBeforeSmileyFaces) {\n          await navigate(`/quiz`)\n        } else {\n          await navigate(`/smiley-faces`)\n        }\n      }\n    }\n  }\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div className={landingFormStyles.detailsForm}>\n        <Heading level='2'>Enter Child Details:</Heading>\n        <FieldError\n          id='group-error'\n          errorMessage='Error: please enter a group name.'\n          showError={groupError}\n        >\n          <label>\n            Group:\n            <input\n              aria-describedby='group-error'\n              autoComplete='off'\n              type='text'\n              name='groupInput'\n              value={group}\n              onBlur={(event): void => {\n                validateGroup(event.target.value)\n              }}\n              onChange={(event): void => {\n                setGroup(event.target.value)\n              }}\n            />\n          </label>\n        </FieldError>\n        <FieldError\n          id='name-error'\n          errorMessage='Error: please enter a child name.'\n          showError={nameError}\n        >\n          <label>\n            Name:\n            <input\n              aria-describedby='name-error'\n              autoComplete='off'\n              type='text'\n              name='nameInput'\n              value={name}\n              onBlur={(event): void => {\n                validateName(event.target.value)\n              }}\n              onChange={(event): void => {\n                setName(event.target.value)\n              }}\n            />\n          </label>\n        </FieldError>\n        <FieldError\n          id='age-error'\n          errorMessage=\"Error: please enter child's age in months, from 12-240. (i.e 5yrs = 60)\"\n          showError={ageError}\n        >\n          <label>\n            Age (in months):\n            <input\n              aria-describedby='age-error'\n              autoComplete='off'\n              type='number'\n              name='ageInput'\n              value={age}\n              onBlur={(event): void => {\n                validateAge(event.target.value)\n              }}\n              onChange={(event): void => {\n                setAge(event.target.value)\n              }}\n            />\n          </label>\n        </FieldError>\n        <label>\n          <div>Gender:</div>\n          <CheckboxGroup groupLabel='Gender'>\n            <Radio\n              name='gender'\n              onChange={(): void => {\n                setGender('F')\n              }}\n              isChecked={gender === 'F'}\n              label='Female'\n              value='F'\n            />\n            <Radio\n              name='gender'\n              onChange={(): void => {\n                setGender('M')\n              }}\n              isChecked={gender === 'M'}\n              label='Male'\n              value='M'\n            />\n          </CheckboxGroup>\n        </label>\n        <label>\n          <div>Character Choice Timing:</div>\n          <CheckboxGroup groupLabel='character choice location'>\n            <Checkbox\n              id='character-last-input'\n              name='characterChoiceLastInput'\n              isChecked={characterChoiceLast}\n              value={`${characterChoiceLast}`}\n              text='Ask character choice last?'\n              onChange={(): void => {\n                setCharacterChoiceLast(!characterChoiceLast)\n              }}\n            />\n          </CheckboxGroup>\n        </label>\n        <FieldError\n          id='picture-sequence-error'\n          errorMessage='Error: please chose an option, (cycle through for each child pls)'\n          showError={pictureSequenceError}\n        >\n          <label>\n            <div>SmileyFace Picture Sequence:</div>\n            <select\n              aria-describedby='picture-sequence-error'\n              name='pictureSequence'\n              onChange={(event): void => {\n                setPictureSequence(event.target.value)\n              }}\n              onBlur={(event): void => {\n                const value = event.target.value\n                validatePictureSequence(value)\n              }}\n              defaultValue='none'\n            >\n              <option value='none' disabled hidden>\n                -- please choose a sequence --\n              </option>\n              {[\n                { label: 'Sequence 1', value: '1' },\n                { label: 'Sequence 2', value: '2' },\n                { label: 'Sequence 3', value: '3' },\n                { label: 'Sequence 4', value: '4' },\n              ].map((item) => {\n                return (\n                  <option key={`${item.value}-${item.label}`} value={item.value}>\n                    {item.label}\n                  </option>\n                )\n              })}\n            </select>\n          </label>\n        </FieldError>\n        <label>\n          <div>Quiz Section Order:</div>\n          <CheckboxGroup groupLabel='Quiz section before/after smilies questions'>\n            <Radio\n              name='quizBeforeSmileyFaces'\n              onChange={(): void => {\n                setQuizBeforeSmileyFaces(true)\n              }}\n              isChecked={quizBeforeSmileyFaces}\n              label='Before'\n              value='A'\n            />\n            <Radio\n              name='quizBeforeSmileyFaces'\n              onChange={(): void => {\n                setQuizBeforeSmileyFaces(false)\n              }}\n              isChecked={!quizBeforeSmileyFaces}\n              label='After'\n              value='B'\n            />\n          </CheckboxGroup>\n        </label>\n        <Spacing />\n        <div className={landingFormStyles.buttonWrapper}>\n          <Button aria-describedby='form-error' size='M' type='submit' buttonText='Submit' />\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default LandingForm\n","// extracted by mini-css-extract-plugin\nexport var detailsForm = \"landingForm-module--details-form--OMonO\";\nexport var buttonWrapper = \"landingForm-module--button-wrapper--t72++\";","import React from 'react'\nimport GenericLayout from '../components/layouts/GenericLayout/GenericLayout'\nimport LandingForm from '../components/sections/proj/landingForm'\n\nconst IndexPage: React.FC = () => {\n  return (\n    <GenericLayout>\n      <LandingForm />\n    </GenericLayout>\n  )\n}\n\nexport default IndexPage\n"],"names":["unavailable","isChecked","id","available","onChange","value","text","rest","textClassName","getClassNames","defaultClasses","conditionalClasses","checkboxStyles","checkboxClassName","className","disabled","checked","type","groupLabel","showLabel","children","groupLabelClassName","Text","errorMessage","showError","weight","label","spacing","spacingSingle","spacingDouble","size","classNames","spacingStyles","useState","nameError","setNameError","groupError","setGroupError","ageError","setAgeError","pictureSequenceError","setPictureSequenceError","gender","setGender","age","setAge","name","setName","group","setGroup","pictureSequence","setPictureSequence","characterChoiceLast","setCharacterChoiceLast","quizBeforeSmileyFaces","setQuizBeforeSmileyFaces","useEffect","detailsFormString","window","sessionStorage","getItem","detailsForm","JSON","parse","clear","validateAge","Number","validateName","length","validateGroup","validatePictureSequence","includes","validateForm","groupValid","nameValid","ageValid","pictureValue","handleFormSubmit","event","preventDefault","formData","setItem","stringify","navigate","onSubmit","Heading","level","autoComplete","onBlur","target","defaultValue","hidden","map","item","key","Button","buttonText","GenericLayout"],"sourceRoot":""}