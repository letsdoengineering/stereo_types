/* Customize the label (the container) */
.container {
    display: block;
    position: relative;
    padding-left: 2rem;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Add style for when focus on original input style to our checkmark */
.container input:focus ~ .checkmark {
    -moz-box-shadow:    0 0 0 2px var(--focus);
    -webkit-box-shadow: 0 0 0 2px var(--focus);
    box-shadow:         0 0 0 2px var(--focus);
}

/* Create a custom checkbox */
.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 1rem;
    width: 1rem;
    border: 2px solid black;
    background-color: white;
}

/* When checked add background */
.container input:checked ~ .checkmark {
    background-color: black;
}

/* When checked but unavailable add gray background */
.container input:checked ~ .checkmark.unavailable {
    background-color: var(--outline-gray);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
    left: 3px;
    width: 6px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
}

.unavailable {
    color: var(--outline-gray);
    border-color: var(--outline-gray);
    cursor: default;
}
